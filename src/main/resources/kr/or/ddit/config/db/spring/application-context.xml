<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- kr.or.ddit 패키지 하위의 클래스 중 @Controller 어노테이션이 붙은
		클래스를 스캔하여 스프링 빈으로 생성 -->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
	<!-- use default filters가 true인 경우에는 @Service, @Repository, @Component등 기본으로 지정된
		어노테이션이 붙은 대상을 모두 bean으로 포함한다. false인 경우 직접 해당 어노테이션을 지정해줘야 한다. -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- prefix : 접두어, suffix : 접미어-->
		<!-- Controller가 반환하는 문자열에 prefix, suffix를 적용하여 해당 경로의 파일로
		응답을 생성
		LoginController.getView() ==> "login/view"
			prefix			  viewName	    suffix
		"/WEB-INF/views/" + "login/view" + ".jsp"
		"/WEB-INF/views/login/view.jsp"
		 ㄴSpring에서 JSP로 응답을 생성할 때 일반적으로 사용하는 방법이다.-->
		 
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- @Controller, @RequestMapping, @HandlerMapping, @HandlerAdapter, validation,
	 formatting conversion service 등 Spring MVC 패턴에 필요한 Annotation, Element를 처리한다. -->
	<mvc:annotation-driven/>
	
	<!--  자신이 처리하지 못하는 servlet을 server에 있는 default servlet에 위임한다! -->
	<mvc:default-servlet-handler/>
	
	<!-- 파일 업로드 처리를 위한 multipartResolver 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
	</bean>
	
	
	 
</beans>
