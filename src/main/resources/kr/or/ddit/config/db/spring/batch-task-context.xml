<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- job Repository : db를 사용하지 않는 형식상의 jobRepository-MapJobRepositoryFactoryBean-->
	<bean id="jobRepository" 
	class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"></bean>
	
	<!-- job launcher : SimpleJobLauncher -->
	<bean id="jobLauncher" 
	class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"></property>
	</bean>
	<bean id="basicReader" class="kr.or.ddit.batch.basic.BasicReader"/>
	<bean id="basicProcessor" class="kr.or.ddit.batch.basic.BasicProcessor"></bean>
	<bean id="basicWriter" class="kr.or.ddit.batch.basic.BasicWriter"/>
	
	<!--  step에서 기본적으로 사용하는 트랜잭션 매니저, 이름이 정해짐. transactionManager 
		  기본 이름을 사용하지 않을 경우 tasklet transaction-manager 속성에 등록한다.
    -->
	<bean id="resourcelessTX" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"></bean>
	<batch:job id="basicJob" restartable="true"> <!-- 다시 시작 가능하게 할거야 ? -->
		<batch:step id="basicStep" allow-start-if-complete="true"> <!-- 성공적으로 수행되었을 때 다시 수행 가능하게 할 것인가? -->
			<batch:tasklet transaction-manager="resourcelessTX"> 
				<batch:chunk reader="basicReader" 
							 processor="basicProcessor" 
							 writer="basicWriter"
							 commit-interval="2"/> <!--  1개씩 커밋하겠다.. -->
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- restartable과 allow-start-if-complete 옵션이 없어도 실행 됐었는데?
		옵션을 넣지 않았을 경우에는 spring container가 다시 생성되지만, 이 옵션을 넣으면 기존의 
		spring container가 가지고 있는 정보를 그대로 가지고 간다.
	 -->
	
	<bean id="basicTask" class="kr.or.ddit.batch.basic.BasicBatchTask">
<!-- 		<property name="jobLauncher" ref="jobLauncher"></property> -->
<!-- 		<property name="basicJob" ref="basicJob"></property> -->
	</bean>
	<task:scheduler id="scheduler"/>
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="basicTask" method="task" cron="*/3 * * * * *"/>
	</task:scheduled-tasks>
	
	<context:annotation-config/> <!-- component-scan을 사용하면, 입력하지 않아도 된다. -->
	
	
</beans>
